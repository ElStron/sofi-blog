---
import BlockRendererInner from "./BlockRenderer.astro";
import type { Block } from "@wp-block-tools/styles";
import { getBlockStyling } from "@wp-block-tools/styles";

type Props = {
  blocks: Block[];
};

const { blocks } = Astro.props;
export const prerender = false

---

{blocks.map((block) => {
  const { styles, classes } = getBlockStyling(block);
  switch (block.name) {
    case "core/image":
      return <img set:html={block.attributes?.content} class={classes} style={styles} />;
    case "core/post-content":
      return (
        <div class={classes} style={styles}>
          <BlockRendererInner blocks={block.innerBlocks || []} />
        </div>
      );
    case "core/template-part":
      return <BlockRendererInner blocks={block.innerBlocks} />;
    case "core/post-content":
      return (
        <div class={classes} style={styles}>
          <BlockRendererInner blocks={block.innerBlocks} />
        </div>
      );
    case "core/paragraph":
      return <p set:html={block.attributes?.content} class={classes} style={styles} />;
    case "core/template-part":
    return <BlockRendererInner blocks={block.innerBlocks} />;
    default:
      return null;
  }
})}

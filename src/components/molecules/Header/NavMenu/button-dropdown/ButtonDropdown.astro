---
// Array of panel options
const panelOptions = [
  {
    label: "Portafolio",
    href: "https://itssofi.dev/",
    icon: "zondicons:portfolio",
    target: "_blank",
  },
  {
    label: "GitHub",
    href: "https://github.com/SofiDevO",
    icon: "fa-brands:github-alt",
    target: "_blank",
  },
  { label: "LinkedIn", href: "https://www.linkedin.com/in/sofidev/", icon: "pajamas:linkedin", target: "_blank" },
  {
    label: "Apoya este sitio",
    href: "/support",
    icon: "fluent-emoji:pink-heart",
    target: "_self",
  },
];
---

<script>
  let isOpen = false;

  function togglePanel() {
    isOpen = !isOpen;
    const panel = document.getElementById("panel-menu");
    const button = document.getElementById("menu-button");

    if (panel) {
      if (isOpen) {
        panel.classList.remove("panel-menu--hidden", "panel-menu--closed");
        panel.classList.add("panel-menu--open");
        button.setAttribute("aria-expanded", "true");
      } else {
        panel.classList.add("panel-menu--hidden", "panel-menu--closed");
        panel.classList.remove("panel-menu--open");
        button.setAttribute("aria-expanded", "false");
      }
    }
  }

  function closePanel() {
    isOpen = false;
    const panel = document.getElementById("panel-menu");
    const button = document.getElementById("menu-button");

    if (panel) {
      panel.classList.add("panel-menu--hidden", "panel-menu--closed");
      panel.classList.remove("panel-menu--open");
      button.setAttribute("aria-expanded", "false");
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    const button = document.getElementById("menu-button");
    const panelLinks = document.querySelectorAll(".panel-menu__item");

    if (button) {
      button.addEventListener("click", togglePanel);
    }

    panelLinks.forEach((link) => {
      link.addEventListener("click", closePanel);
    });

    // Close panel when clicking outside
    document.addEventListener("click", (event) => {
      const panel = document.getElementById("panel-menu");
      const button = document.getElementById("menu-button");

      if (
        isOpen &&
        panel &&
        event.target &&
        !panel.contains(event.target instanceof Node ? event.target : null) &&
        button !== event.target
      ) {
        closePanel();
      }
    });
  });
</script>

<div class="panel">
  <div class="panel__trigger">
    <button
      type="button"
      class="panel__button"
      id="menu-button"
      aria-expanded="false"
      aria-haspopup="true"
    >
      Mucho m√°s
      <!-- <iconify-icon class="panel__icon" width="30" height="30" icon="gridicons:panel"
      ></iconify-icon> -->
    </button>
  </div>

  <div
    id="panel-menu"
    class="panel-menu panel-menu--hidden panel-menu--closed"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="menu-button"
    tabindex="-1"
  >
    <div class="panel-menu__items" role="none">
      {
        panelOptions.map((option) => (
          <a
            href={option.href}
            class="panel-menu__item"
            target={option.target}
            rel={option.target == "_blank" ? "noopener noreferrer" : ""}
            tabindex="-1"
          >
            <iconify-icon
              class="panel-menu__icon"
              icon={option.icon}
              wifth="25"
              height="25"
            />
            {option.label}
          </a>
        ))
      }
    </div>
  </div>
</div>

<style lang="scss">
   @use "@sass/variables" as v;
  @use "@sass/mixins" as *;
  .panel {
    position: relative;
    display: inline-block;
    text-align: left;
    background: transparent;

    @include respond-to("medium") {
      display:flex;
      flex-direction: column;
      position: static;
      width: 100%;

    }

    &__trigger {
      display: flex;
    }

    &__button {
      margin-left: 1rem;
      display: flex;
      width: 100%;
      justify-content: center;
      gap: 0.375rem;
      border-radius: 7px;
      background-color: transparent;
      padding: 0.8rem 0.8rem;
      font-size: 1.6rem;
      font-weight: 600;
      color: aqua;
      box-shadow: 0 0 2px rgba(153, 228, 226, 0.423);
      border: 1px solid rgba(153, 228, 226, 0.423);
      transition: background-color 0.2s ease-in-out;
      &:hover {
        background-color: #1b2732;
      }

    }
    &__icon {
      margin-right: -0.25rem;
      width: 1.25rem;
      height: 1.25rem;
      color: aqua;
      font-size: 3rem;
    }
  }

  .panel-menu {
    position: absolute;
    right: -2rem;
    display: flex;
    z-index: 10;
    margin-top: 2rem;
    width: 29rem;
    border-radius: 1.3rem;
    background-color: #0c0c0c;
    box-shadow:
      0 4px 6px rgba(0, 0, 0, 0.1),
      0 1px 3px rgba(0, 0, 0, 0.06);
    transform-origin: top right;
    transition:
      opacity 0.1s ease-out,
      transform 0.1s ease-out;
    flex-direction: column;
    align-items: center;
    border: 1px solid #07ffd633;
    @include respond-to("medium") {
      right: 0;
      margin-top: 0;
      width: 100%;
      position: static;
    }

    &--hidden {
      display: none;
    }

    &--closed {
      opacity: 0;
      transform: scale(0.95);
    }

    &--open {
      opacity: 1;
      transform: scale(1);
    }

    &__items {
      padding: 1rem;
      width: 100%;
    }
    &__item {
      text-align: center;
      gap: 0.8rem;
      display: flex;
      align-items: center;
      gap: 2rem;
      padding: 0.5rem 1rem;
      font-size: 1.7rem;
      color: white;
      text-decoration: none;
      transition: background-color 0.2s ease-in-out;

      &:hover {
        background-color: #1e2636;
      }
    }
  }
</style>

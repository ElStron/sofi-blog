---
  // Array of dropdown options
  const dropdownOptions = [
    { id: 'menu-item-0', label: 'Account settings', href: '#' },
    { id: 'menu-item-1', label: 'Support', href: '#' },
    { id: 'menu-item-2', label: 'License', href: '#' },
    { id: 'menu-item-3', label: 'Sign out', href: '#', isButton: true, method: 'POST' },
  ];
---
<script>
  let isOpen = false;


  function toggleDropdown() {
    isOpen = !isOpen;
    const dropdown = document.getElementById('dropdown-menu');
    const button = document.getElementById('menu-button');

    if (dropdown) {
      if (isOpen) {
        dropdown.classList.remove('dropdown-menu--hidden', 'dropdown-menu--closed');
        dropdown.classList.add('dropdown-menu--open');
        button.setAttribute('aria-expanded', 'true');
      } else {
        dropdown.classList.add('dropdown-menu--hidden', 'dropdown-menu--closed');
        dropdown.classList.remove('dropdown-menu--open');
        button.setAttribute('aria-expanded', 'false');
      }
    }
  }

  function closeDropdown() {
    isOpen = false;
    const dropdown = document.getElementById('dropdown-menu');
    const button = document.getElementById('menu-button');

    if (dropdown) {
      dropdown.classList.add('dropdown-menu--hidden', 'dropdown-menu--closed');
      dropdown.classList.remove('dropdown-menu--open');
      button.setAttribute('aria-expanded', 'false');
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('menu-button');
    const dropdownLinks = document.querySelectorAll('.dropdown-menu__item');

    if (button) {
      button.addEventListener('click', toggleDropdown);
    }

    dropdownLinks.forEach((link) => {
      link.addEventListener('click', closeDropdown);
    });
  });
</script>

<div class="dropdown">
  <div class="dropdown__trigger">
    <button
      type="button"
      class="dropdown__button"
      id="menu-button"
      aria-expanded="false"
      aria-haspopup="true"
    >
      Options
      <svg
        class="dropdown__icon"
        viewBox="0 0 20 20"
        fill="currentColor"
        aria-hidden="true"
        data-slot="icon"
      >
        <path
          fill-rule="evenodd"
          d="M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z"
          clip-rule="evenodd"
        />
      </svg>
    </button>
  </div>

  <div
    id="dropdown-menu"
    class="dropdown-menu dropdown-menu--hidden dropdown-menu--closed"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="menu-button"
    tabindex="-1"
  >
    <div class="dropdown-menu__items" role="none">
      {dropdownOptions.map((option) => (
        <a
          href={option.href}
          class="dropdown-menu__item"
          role="menuitem"
          tabindex="-1"
          id={option.id}
        >
          {option.label}
        </a>
      ))}
    </div>
  </div>
</div>

<style lang="scss">
.dropdown {
  position: relative;
  display: inline-block;
  text-align: left;

  &__trigger {
    display: flex;
  }

  &__button {
    display: inline-flex;
    width: 100%;
    justify-content: center;
    gap: 0.375rem;
    border-radius: 0.375rem;
    background-color: #ffffff;
    padding: 0.5rem 0.75rem;
    font-size: 0.875rem;
    font-weight: 600;
    color: #1f2937;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    border: 1px solid #d1d5db;
    transition: background-color 0.2s ease-in-out;

    &:hover {
      background-color: #f9fafb;
    }
  }

  &__icon {
    margin-right: -0.25rem;
    width: 1.25rem;
    height: 1.25rem;
    color: #9ca3af;
  }
}

.dropdown-menu {
  position: absolute;
  right: 0;
  z-index: 10;
  margin-top: 0.5rem;
  width: 14rem;
  border-radius: 0.375rem;
  background-color: #ffffff;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);
  border: 1px solid rgba(0, 0, 0, 0.05);
  transform-origin: top right;
  transition: opacity 0.1s ease-out, transform 0.1s ease-out;

  &--hidden {
    display: none;
  }

  &--closed {
    opacity: 0;
    transform: scale(0.95);
  }

  &--open {
    opacity: 1;
    transform: scale(1);
  }

  &__items {
    padding: 0.25rem 0;

    &__item {
      display: block;
      padding: 0.5rem 1rem;
      font-size: 0.875rem;
      color: #374151;
      text-decoration: none;
      transition: background-color 0.2s ease-in-out;

      &:hover {
        background-color: #f3f4f6;
      }
    }
  }
}
</style>
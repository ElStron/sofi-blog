---
import Logo from "@atoms/Logo/Logo.astro";
import HamburgerButton from "@atoms/hamburgerBtn/hamburgerBtn.astro";
import NavMenu from "@src/components/atoms/NavMenu/NavMenu.astro";
export const prerender = true;
import { fetchMenuData } from "@src/services/getMenu";

const pagePathname = Astro.url.pathname;
const staticMenu = { text: "Portfolio", url: "https://itssofi.dev/" };

interface MenuItem {
  id: number;
  parentId?: number;
  url: string;
  label: string;
  children?: MenuItem[];
}

interface MenuData {
  menu: {
    menuItems: {
      nodes: MenuItem[];
    };
  };
}

let menuData: MenuData | null = null;

const response = await fetchMenuData;
menuData = response as MenuData;

const menuItems = Array.isArray(menuData?.menu?.menuItems?.nodes)
  ? [...menuData.menu.menuItems.nodes]
  : [];

// Function to get the slug from a URL
function getSlug(url) {
  const urlWithoutTrailingSlash = url.endsWith("/") ? url.slice(0, -1) : url;
  const parts = urlWithoutTrailingSlash.split("/");
  return parts[parts.length - 1];
}

// Function to transform the flat list into a hierarchical structure
const flatListToHierarchical = (
  data = [],
  { idKey = "id", parentKey = "parentId", childrenKey = "children" } = {}
) => {
  const tree = [];
  const childrenOf = {};
  data.forEach((item) => {
    const newItem = { ...item, slug: getSlug(item.url) };
    const { [idKey]: id, [parentKey]: parentId = 0 } = newItem;
    childrenOf[id] = childrenOf[id] || [];
    newItem[childrenKey] = childrenOf[id];
    parentId
      ? (childrenOf[parentId] = childrenOf[parentId] || []).push(newItem)
      : tree.push(newItem);
  });
  return tree;
};

// Transform the data into a hierarchical format
const hierarchicalMenu = flatListToHierarchical(menuItems as never[]);
---

<script>
  import "@controllers/hamburger.controller";
</script>

<header class="header">
  <div class="header__container">
    <Logo />
    <NavMenu
      pagePathname={pagePathname}
      hierarchicalMenu={hierarchicalMenu}
      staticMenu={staticMenu}
    />
    <HamburgerButton />
  </div>
</header>

<style lang="scss" is:global>
  .header {
    &__container {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    &__menu {
      display: flex;
    }
    &__list {
      display: flex;
      list-style: none;
      margin-right: 0.5rem;
    }
    &__item {
      position: relative;
      margin-right: 1rem;
      display: flex;
      align-items: center;
      iconify-icon {
        color: aqua;
      }

      &:hover .dropdown {
        transition: all 0.6s ease;
        opacity: 1;
        display: block;
        transform: translateY(30px);

        @starting-style {
          opacity: 0;
          display: none;
          transform: translateY(0px);
        }
      }
    }

    &__link {
      text-decoration: none;
      color: aqua;
      display: flex;
      align-items: center;
      gap: 0.3rem;
    }
  }

  .dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    display: none;
    background-color: #fff;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    list-style: none;
    padding: 0;
    margin: 0;
    min-width: 150px;
    z-index: 10;
    margin-top: 0.3rem;
    &__item {
      padding: 0.5rem 1rem;
      white-space: nowrap;
    }
  }

  .dropdown__link {
    text-decoration: none;
    color: inherit;
    display: block;
    width: 100%;
  }

  .header__item:hover .dropdown {
    display: block;
  }
</style>

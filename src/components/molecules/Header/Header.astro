---
import Logo from "@atoms/Logo/Logo.astro";
import HamburgerButton from "@atoms/hamburgerBtn/hamburgerBtn.astro";
import NavMenu from "@src/components/atoms/NavMenu/NavMenu.astro";
import { fetchMenuData } from "@src/services/getMenu";

const pagePathname = Astro.url.pathname;
const staticMenu = { text: "Portfolio", url: "https://itssofi.dev/" };


interface MenuItem {
  id: number;
  parentId?: number;
  url: string;
  label: string;
  children?: MenuItem[];
}

interface MenuData {
  menu: {
    menuItems: {
      nodes: MenuItem[];
    };
  };
}


let menuData: MenuData | null = null;

try {
  const response = await fetchMenuData();
  menuData = response as MenuData;
} catch (error) {
  console.error("Error loading menu data:", error);
}

// Manejo de datos del menú con fallback en caso de que sea null
const menuItems = menuData?.menu?.menuItems?.nodes || [];

// Función para obtener el slug de una URL
function obtenerSlug(url) {
  const urlSinBarraFinal = url.endsWith("/") ? url.slice(0, -1) : url;
  const partes = urlSinBarraFinal.split("/");
  return partes[partes.length - 1];
}

// Función para transformar la lista plana en jerárquica
const flatListToHierarchical = (
  data = [],
  { idKey = "id", parentKey = "parentId", childrenKey = "children" } = {}
) => {
  const tree = [];
  const childrenOf = {};
  data.forEach((item) => {
    const newItem = { ...item, slug: obtenerSlug(item.url) };
    const { [idKey]: id, [parentKey]: parentId = 0 } = newItem;
    childrenOf[id] = childrenOf[id] || [];
    newItem[childrenKey] = childrenOf[id];
    parentId
      ? (childrenOf[parentId] = childrenOf[parentId] || []).push(newItem)
      : tree.push(newItem);
  });
  return tree;
};

// Transforma los datos a formato jerárquico
const hierarchicalMenu = flatListToHierarchical(menuItems);
---

<script>
  import "@controllers/hamburger.controller";
</script>

<header class="header">
  <div class="header__container">
    <Logo />
    <NavMenu server:defer pagePathname={pagePathname} hierarchicalMenu={hierarchicalMenu} staticMenu={staticMenu} />
    <HamburgerButton />
  </div>
</header>

<style lang="scss" is:global>
  .header {
    &__container {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    &__menu {
      display: flex;
    }
    &__list {
      display: flex;
      list-style: none;
      margin-right: 0.5rem;
    }
    &__item {
      position: relative;
      margin-right: 1rem;
      display: flex;
      align-items: center;
      iconify-icon {
        color: aqua;
      }

      &:hover .dropdown {
        display: block;
      }
    }
    &__link {
      text-decoration: none;
      color: aqua;
      display: flex;
      align-items: center;
      gap: 0.3rem;
    }
  }

  .dropdown {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    background-color: #fff;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    list-style: none;
    padding: 0;
    margin: 0;
    min-width: 150px;
    z-index: 10;
    margin-top: 0.3rem;
    &__item {
      padding: 0.5rem 1rem;
      white-space: nowrap;
    }
  }

  .dropdown__link {
    text-decoration: none;
    color: inherit;
    display: block;
    width: 100%;
  }

  .header__item:hover .dropdown {
    display: block;
  }
</style>

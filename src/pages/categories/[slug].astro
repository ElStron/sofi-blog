---
import Layout from "@src/layouts/Layout.astro";
import PostCard from "@src/components/atoms/PostCard/PostCard.astro";
import Pagination from "@atoms/Pagination/Pagination.astro";
import { getCategorieBySlug } from "@src/services/categories";
const { slug } = Astro.params;

const category = await getCategorieBySlug(slug);
if (!category) {
  return Astro.redirect("/404");
}

const sortedPosts = category.posts.nodes.sort(
  (a, b) => Date.parse(b.date) - Date.parse(a.date)
);

// Configuraci√≥n de paginaci√≥n
const postsPerPage = 3;
const currentPage = Number(Astro.url.searchParams.get("page")) || 1;
const totalPages = Math.ceil(sortedPosts.length / postsPerPage);

// Obtener los posts para la p√°gina actual
const startIndex = (currentPage - 1) * postsPerPage;
const endIndex = startIndex + postsPerPage;
const paginatedPosts = sortedPosts.slice(startIndex, endIndex);

import { fade } from "astro:transitions";
export const prerender = false

---

<Layout>
  <section class="categories">
    <div class="categories__cards">
      <h2
        class="categories__title"
        transition:name={category.name}
        transition:animate={fade({ duration: ".4s" })}
      >
        Posts de la categor√≠a: {category?.name}
      </h2>
      {
        paginatedPosts.length > 0 ? (
          <ul role="list" class="link-card-grid">
            {paginatedPosts.map((post) => {
              const featuredImage =
                post.featuredImage?.node?.mediaItemUrl ||
                "/img/branding/logo.png";
              const altText =
                post.featuredImage?.node?.altText || "Imagen no disponible";

              return (
                <li>
                  <PostCard
                    key={post.id}
                    date={post.date}
                    link={post.slug}
                    title={post.title}
                    excerpt={post.excerpt}
                    image={featuredImage}
                    author={post.author.node.name}
                    authorImage={post.author.node.avatar.url}
                    authorFirstName={post.author.node.firstName}
                    authorLastName={post.author.node.lastName}
                    categories={post.categories.nodes}
                  />
                </li>
              );
            })}
          </ul>
        ) : (
          <div class="categories__cards">

              <p>No se encontraron posts en esta categor√≠a. ü¶ù</p>

          </div>
        )
      }
    </div>
    {
      totalPages > 1 && (
        <Pagination
          currentPage={currentPage}
          totalPages={totalPages}
          baseUrl={Astro.url.pathname}
        />
      )
    }
  </section>
</Layout>

<style lang="scss" is:global>
  @use "@sass/variables" as v;
  @use "@sass/mixins" as mixins;
  main {
    margin:0 auto!important;
    padding-top: 15rem!important;
  }
  .categories {
    max-width: 1300px;
    margin: 0 auto;
    display: grid;

    &__title {
      font-size: 2.5rem;
      font-weight: 600;
      color: v.$french-violet;
      margin-bottom: 5rem;
      transition: color 0.3s ease-in-out;
    }
    &__cards {
      width: 100%;
      @include mixins.centerFlex(center);
      flex-direction: column;
      min-height: 380px;
      margin-bottom: 3rem;
    }
  }
</style>

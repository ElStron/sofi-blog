---
import Layout from "@src/layouts/Layout.astro";
import PostCard from "@src/components/atoms/PostCard/PostCard.astro";
import { getCategorieBySlug } from "@src/services/categories";
export const prerender = false;
const { slug } = Astro.params;
const { indexNum } = Astro.props;

const category = await getCategorieBySlug(slug);
if (!category) {
  return Astro.redirect("/404");
}

const sortedPosts = category.posts.nodes.sort(
  (a, b) => Date.parse(b.date) - Date.parse(a.date)
);


---
<Layout >
  <section class="categories">
    <div class="categories__container" >
      <h2 class="category__title">
        Posts de la categoría: {category?.name}
      </h2>
      {
        sortedPosts.length > 0 ? (
          <ul role="list" class="link-card-grid">
            {sortedPosts.map((post) => {
              const featuredImage =
                post.featuredImage?.node?.mediaItemUrl ||
                "/img/branding/logo.png";
              const altText =
                post.featuredImage?.node?.altText || "Imagen no disponible";

              return (
                <li>
                  <PostCard
                    key={post.id}
                    date={post.date}
                    link={`/blog/${post.slug}`}
                    title={post.title}
                    excerpt={post.excerpt}
                    image={featuredImage}
                    author={post.author.node.name}
                    authorImage={post.author.node.avatar.url}
                    authorFirstName={post.author.node.firstName}
                    authorLastName={post.author.node.lastName}
                    categories={post.categories.nodes}
                  />
                </li>
              );
            })}
          </ul>
        ) : (
          <p>No se encontraron posts en esta categoría.</p>
        )
      }
    </div>
  </section>
</Layout>

<style lang="scss">
  .categories {
    padding-top: 4rem;
    max-width: 1300px;
    margin: 0 auto;
    &__container {
      align-items: center;
    }
  }
</style>
